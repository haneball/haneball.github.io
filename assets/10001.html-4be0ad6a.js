const e=JSON.parse('{"key":"v-70c9a418","path":"/posts/js/10001.html","title":"实现 Function 的原生方法","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"实现 Function 的原生方法","category":["JavaScript","TypeScript"],"tag":["原生方法"],"order":1,"description":"bind 方法 参数有 thisArg 和原函数的参数 args 若 thisArg 为 undefined，则赋值全局对象 window 支持衔接后续传入的参数 otherArgs","head":[["meta",{"property":"og:url","content":"https://haneball.github.io/posts/js/10001.html"}],["meta",{"property":"og:site_name","content":"haneball Blog"}],["meta",{"property":"og:title","content":"实现 Function 的原生方法"}],["meta",{"property":"og:description","content":"bind 方法 参数有 thisArg 和原函数的参数 args 若 thisArg 为 undefined，则赋值全局对象 window 支持衔接后续传入的参数 otherArgs"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-16T14:20:37.000Z"}],["meta",{"property":"article:author","content":"haneball"}],["meta",{"property":"article:tag","content":"原生方法"}],["meta",{"property":"article:modified_time","content":"2024-01-16T14:20:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"实现 Function 的原生方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-16T14:20:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"haneball\\",\\"url\\":\\"https://haneball.github.io\\"}]}"]]},"headers":[{"level":2,"title":"bind 方法","slug":"bind-方法","link":"#bind-方法","children":[]},{"level":2,"title":"call 方法","slug":"call-方法","link":"#call-方法","children":[]},{"level":2,"title":"apply 方法","slug":"apply-方法","link":"#apply-方法","children":[]}],"git":{"createdTime":1693753806000,"updatedTime":1705414837000,"contributors":[{"name":"haneball","email":"dendro@yeah.net","commits":9}]},"readingTime":{"minutes":1.1,"words":331},"filePathRelative":"posts/js/10001.md","localizedDate":"2023年9月3日","excerpt":"<h2> bind 方法</h2>\\n<ul>\\n<li>参数有 <code>thisArg</code> 和原函数的参数 <code>args</code></li>\\n<li>若 <code>thisArg</code> 为 <code>undefined</code>，则赋值全局对象 <code>window</code></li>\\n<li>支持衔接后续传入的参数 <code>otherArgs</code></li>\\n</ul>\\n\\n","autoDesc":true}');export{e as data};
